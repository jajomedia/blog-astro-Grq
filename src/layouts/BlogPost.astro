---
//import type { CollectionEntry } from 'astro:content';
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';

//type Props = CollectionEntry<'blog'>['data'];

const { title, date, modified, description, sourceUrl, featuredImage, categories,  postData, pubDate, updatedDate, heroImage } = Astro.props;
const dateValue = new Date(date);
const modifiedDateValue = new Date(modified)
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			main {
				width: calc(100% - 2em);
				max-width: 100%;
				margin: 0;
			}
			.hero-image {
				width: 100%;
			}
			.hero-image img {
				display: block;
				margin: 0 auto;
				border-radius: 12px;
				box-shadow: var(--box-shadow);
			}
			.prose {
				width: 720px;
				max-width: calc(100% - 2em);
				margin: auto;
				padding: 1em;
				color: rgb(var(--gray-dark));
			}
			.title {
				margin-bottom: 1em;
				padding: 1em 0;
				text-align: center;
				line-height: 1;
			}
			.title h1 {
				margin: 0 0 0.5em 0;
			}
			.date {
				margin-bottom: 0.5em;
				color: rgb(var(--gray));
				font-size: .75rem;
			}
			.last-updated-on {
				font-style: italic;
			}
			.categories {display: inline-block !important; margin-right: .75rem; font-size: .95rem; font-weight: bold; background-color: aliceblue; padding: .25rem .85rem; color: #000;}

		</style>
	</head>

	<body>
		<Header />
		<main>
			<article>
				<div class="hero-image">
					{featuredImage && <img width={1020} height={510} src={featuredImage.node.sourceUrl} alt="" />}
				</div>
				<div class="prose">
					<div class="title">
						<div class="date">
							<!-- <span><time datetime={date}>{new Date(date).toLocaleDateString()}</time></span> -->
							<FormattedDate date={dateValue} />
							{
								modifiedDateValue && (
									<div class="last-updated-on">
										Ultima modificaci√≥n <FormattedDate date={modifiedDateValue} />
									</div>
								)
							}
						</div>
						<h1>{title}</h1>
						<!-- <p set:html={content}></p> -->
						<slot /> 
						<hr />
<!-- 						{ categories.nodes.map(category => {
							return (<a class='categories' href={`${category.uri}`}>{category.name}</a>)
						})} -->

						<a class="btn-primary" href="/blog">Volver al Blog</a>
					</div>
					<!-- El slot es la informacion interna - single-page del blog( todos los articulos) -->
				</div>
			</article>
		</main>
		<Footer />
	</body>
</html>
